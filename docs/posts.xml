<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Pierre-Yves de Müllenheim</title>
<link>https://pydemull.github.io/website-quarto//posts.html</link>
<atom:link href="https://pydemull.github.io/website-quarto//posts.xml" rel="self" type="application/rss+xml"/>
<description>Movement, wearables, programming</description>
<generator>quarto-0.9.336</generator>
<lastBuildDate>Thu, 30 Jun 2022 22:00:00 GMT</lastBuildDate>
<item>
  <title>Actilife software procedures to get vector magnitude counts: are the computations exactly the same?</title>
  <dc:creator>Pierre-Yves de Müllenheim</dc:creator>
  <link>https://pydemull.github.io/website-quarto//posts/actigraph-vm-counts/index.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>When we measure movement using an ActiGraph accelerometer, we can access two kinds of signals (with GT1M devices and more recent generations of devices): the raw acceleration signal, now expressed in G force units; and the activity counts signal, that describes the amount of body acceleration performed over defined epochs (e.g., 1-s epochs) <span class="citation" data-cites="chenTechnologyAccelerometrybasedActivity2005 johnActiGraphActicalPhysical2012">(Chen &amp; Bassett, 2005; John &amp; Freedson, 2012)</span>.</p>
<p>Activity counts have been commonly used in physical activity studies to estimate time spent in different movement intensities or total amount of movement performed during the day <span class="citation" data-cites="bassettAccelerometerbasedPhysicalActivity2015">(Bassett et al., 2015)</span>. In general, the counts of interest are related to the vertical axis or the vector magnitude (VM), VM being the norm of the movement vector defined as <img src="https://latex.codecogs.com/png.latex?VM%20=%20%5Csqrt%7Bx%5E2%20+%20y%5E2%20+%20z%5E2%7D">, with <img src="https://latex.codecogs.com/png.latex?x">, <img src="https://latex.codecogs.com/png.latex?y">, and <img src="https://latex.codecogs.com/png.latex?z"> the counts related to each accelerometer axis for each epoch, respectively.</p>
<p>When using an ActiGraph accelerometer, VM can be obtained when exporting data from Actilife software to a spreadseet, as for example when exporting the whole dataset to DataTable format, or when exporting the detected wear time epochs (after wear time analysis) to a simple .csv file. Other software programs allow getting VM data, such as R software along with the <code>PhysicalActivity</code> R package <span class="citation" data-cites="choiPhysicalActivityProcessAccelerometer2021">(Choi et al., 2021)</span>. The <code>PhysicalActivity</code> package is well known for its implementation of a nonwear time detection algorithm <span class="citation" data-cites="choiAssessmentWearNonwear2012b">(Choi et al., 2012)</span>, but this package also contains a specific function (the <code>readActigraph()</code> function) to read .agd files and then to compute VM.</p>
<p>An interesting thing with R packages is that code is open, allowing to know exactly what computations are performed when a function returns a result. For example, the <code>readActigraph()</code> function from the <code>PhysicalActivity</code> package actually uses a <code>ceiling()</code> function on the computed VM data. This means that from each inital VM value computed with the function, the function returns at the end the smallest integer that is not lower than the considered value (e.g., for an initial VM value of 4.33, the function will actually return the value 5). Thus, the VM data that are finally obtained from the <code>readActigraph()</code> function are a little transformed. When using Actilife software, it is however more complicated to know what computations are exactly performed when getting VM values. At the end of a personal analysis, I was surprised to see that VM values could be slightly different depending on the procedure used to export data to spreadsheets from Actilife software. Thus, I have performed some analyses to understand how VM values provided by Actilife software are exactly computed and to know to what extent Actilife computation procedures may differ from each other and from other software ressources, specifically the <code>readActigraph()</code> function from the <code>PhysicalActivity</code> R package.</p>
</section>
<section id="methods" class="level1">
<h1>Methods</h1>
<p>Data used in this post were initially obtained following a personnal mesurement of physical behaviour performed using an ActiGraph wGT3X-BT device (sampling rate: 90 Hz) worn at the hip during two weeks. Once the measurement completed, data were downloaded from the device using Actilife software v6.13.4 and two .agd files were created by accumulating activity counts using either 60-s epochs or 1-s epochs, and using the normal filter for both files. Finally, I have produced four different datasets for both 60-s epochs and 1-epochs:</p>
<ul>
<li>A dataset containing VM data computed in R using the VM formula on the .agd file data and a rounding function (2 digits) on the VM values (this procedure is called <code>basic</code> thereafter).</li>
<li>A dataset containing VM data computed in R using the <code>readActigraph()</code>function from the <code>PhysicalActivity</code> R package on the .agd file data (this procedure is called <code>choi</code> thereafter).</li>
<li>A dataset containing VM data computed by Actilife software when exporting data to DataTable format (this procedure is called <code>acti_datatable</code> thereafter).</li>
<li>A dataset containing VM data computed by Actilife software when exporting data after wear time analysis (this procedure is called <code>acti_weartime</code> thereafter).</li>
</ul>
<p>Then, for all datasets containing 60-s epochs and 1-epochs, I have applied in R the <code>wearingMarking()</code> function from the <code>PhysicalActivity</code> R package to finally keep only the wear time epochs from Day 2. This allowed me to make all the datasets comparable for a given epoch length and to reduce their size for faster analysis. The 60-s epoch datasets had 1055 observations each, while the 1-s epoch datasets had 63300 observations each.</p>
<p>To explore potential differences in VM values depending on the software procedure that was used, I have performed the followings: scatter plots for bivariate analyses using all the VM values; bar plots to look at the differences in total VM counts; table view to look at a short sample of VM values obtained from each software procedure.</p>
<p>The R code written to produce data and results can be viewed when clicking on the <strong>Code</strong> buttons in the remaining part of the post.</p>
<<<<<<< HEAD
<div class="cell" data-hash="index_cache/html/unnamed-chunk-1_c7d674762fd9dc1e8a21da240a18df8a">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;"># Packages &amp; functions ---------------------------------------------------------</span></span>
<span id="cb1-2"><span class="do" style="color: #5E5E5E;
font-style: italic;">## Packages</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(actigraph.sleepr)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">library</span>(PhysicalActivity)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;">library</span>(readr)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;">library</span>(tidyr)</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;">library</span>(lubridate)</span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;">library</span>(ggplot2)</span>
<span id="cb1-10"><span class="fu" style="color: #4758AB;">library</span>(ggforce)</span>
<span id="cb1-11"><span class="fu" style="color: #4758AB;">library</span>(patchwork)</span>
<span id="cb1-12"><span class="fu" style="color: #4758AB;">library</span>(forcats)</span>
<span id="cb1-13"><span class="fu" style="color: #4758AB;">library</span>(colorblindr)</span>
<span id="cb1-14"><span class="fu" style="color: #4758AB;">library</span>(reactable)</span>
<span id="cb1-15"><span class="fu" style="color: #4758AB;">library</span>(SimDesign)</span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="do" style="color: #5E5E5E;
font-style: italic;">## Below a function to correctly read accelerometer data exported to 'DataTable'</span></span>
<span id="cb1-18"><span class="do" style="color: #5E5E5E;
font-style: italic;">## format from Actilife software. This function solves the problem that data are</span></span>
<span id="cb1-19"><span class="do" style="color: #5E5E5E;
font-style: italic;">## exported from Actilife with quotes for the 'DataTable' format (the function </span></span>
<span id="cb1-20"><span class="do" style="color: #5E5E5E;
font-style: italic;">## removes the quotes).</span></span>
<span id="cb1-21">read_datatable <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(file) {</span>
<span id="cb1-22">  my_data <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">read_csv</span>(file, <span class="at" style="color: #657422;">skip =</span> <span class="dv" style="color: #AD0000;">10</span>, <span class="at" style="color: #657422;">quote =</span> <span class="st" style="color: #20794D;">""</span>)</span>
<span id="cb1-23">  my_data2 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">lapply</span>(my_data, <span class="cf" style="color: #003B4F;">function</span>(x) { <span class="fu" style="color: #4758AB;">gsub</span>(<span class="st" style="color: #20794D;">","</span>, <span class="st" style="color: #20794D;">"."</span>, x) }) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">as.data.frame</span>()</span>
<span id="cb1-24">  my_data3 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">lapply</span>(my_data2, <span class="cf" style="color: #003B4F;">function</span>(x) { <span class="fu" style="color: #4758AB;">gsub</span>(<span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">\"</span><span class="st" style="color: #20794D;">"</span>, <span class="st" style="color: #20794D;">""</span>, x) }) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb1-25">    <span class="fu" style="color: #4758AB;">as.data.frame</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb1-26">    <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Vector.Magnitude =</span> <span class="fu" style="color: #4758AB;">as.numeric</span>(Vector.Magnitude))</span>
<span id="cb1-27"></span>
<span id="cb1-28">  <span class="fu" style="color: #4758AB;">return</span>(my_data3)</span>
<span id="cb1-29">}</span>
<span id="cb1-30"></span>
<span id="cb1-31"><span class="co" style="color: #5E5E5E;"># Get data</span></span>
<span id="cb1-32"><span class="do" style="color: #5E5E5E;
font-style: italic;">## Datasets with VM obtained using the basic formula of VM (values are rounded </span></span>
<span id="cb1-33"><span class="do" style="color: #5E5E5E;
font-style: italic;">## with 2 digits)</span></span>
<span id="cb1-34">basic_60s <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb1-35">  <span class="fu" style="color: #4758AB;">quiet</span>(</span>
<span id="cb1-36">    actigraph.sleepr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">read_agd</span>(<span class="st" style="color: #20794D;">"data_60sec.agd"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-37">    <span class="fu" style="color: #4758AB;">rename</span>(<span class="at" style="color: #657422;">TimeStamp =</span> timestamp) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-38">    <span class="fu" style="color: #4758AB;">as.data.frame</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-39">    <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">vm =</span> <span class="fu" style="color: #4758AB;">round</span>(<span class="fu" style="color: #4758AB;">sqrt</span>(axis1<span class="sc" style="color: #5E5E5E;">^</span><span class="dv" style="color: #AD0000;">2</span> <span class="sc" style="color: #5E5E5E;">+</span> axis2<span class="sc" style="color: #5E5E5E;">^</span><span class="dv" style="color: #AD0000;">2</span> <span class="sc" style="color: #5E5E5E;">+</span> axis3<span class="sc" style="color: #5E5E5E;">^</span><span class="dv" style="color: #AD0000;">2</span>), <span class="dv" style="color: #AD0000;">2</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb1-40">    <span class="fu" style="color: #4758AB;">wearingMarking</span>(<span class="at" style="color: #657422;">cts =</span> <span class="st" style="color: #20794D;">"vm"</span>, <span class="at" style="color: #657422;">frame =</span> <span class="dv" style="color: #AD0000;">90</span>, <span class="at" style="color: #657422;">streamFrame =</span> <span class="dv" style="color: #AD0000;">30</span>, <span class="at" style="color: #657422;">allowanceFrame =</span> <span class="dv" style="color: #AD0000;">2</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb1-41">    <span class="fu" style="color: #4758AB;">filter</span>(days <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"2"</span> <span class="sc" style="color: #5E5E5E;">&amp;</span> wearing <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"w"</span>)</span>
<span id="cb1-42">  )</span>
<span id="cb1-43"></span>
<span id="cb1-44">basic_1s <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb1-45"> <span class="fu" style="color: #4758AB;">quiet</span>(</span>
<span id="cb1-46">   actigraph.sleepr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">read_agd</span>(<span class="st" style="color: #20794D;">"data_1sec.agd"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-47">   <span class="fu" style="color: #4758AB;">rename</span>(<span class="at" style="color: #657422;">TimeStamp =</span> timestamp) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-48">   <span class="fu" style="color: #4758AB;">as.data.frame</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-49">   <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">vm =</span> <span class="fu" style="color: #4758AB;">round</span>(<span class="fu" style="color: #4758AB;">sqrt</span>(axis1<span class="sc" style="color: #5E5E5E;">^</span><span class="dv" style="color: #AD0000;">2</span> <span class="sc" style="color: #5E5E5E;">+</span> axis2<span class="sc" style="color: #5E5E5E;">^</span><span class="dv" style="color: #AD0000;">2</span> <span class="sc" style="color: #5E5E5E;">+</span> axis3<span class="sc" style="color: #5E5E5E;">^</span><span class="dv" style="color: #AD0000;">2</span>), <span class="dv" style="color: #AD0000;">2</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb1-50">   <span class="fu" style="color: #4758AB;">wearingMarking</span>(<span class="at" style="color: #657422;">cts =</span> <span class="st" style="color: #20794D;">"vm"</span>, <span class="at" style="color: #657422;">frame =</span> <span class="dv" style="color: #AD0000;">90</span>, <span class="at" style="color: #657422;">streamFrame =</span> <span class="dv" style="color: #AD0000;">30</span>, <span class="at" style="color: #657422;">allowanceFrame =</span> <span class="dv" style="color: #AD0000;">2</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb1-51">   <span class="fu" style="color: #4758AB;">filter</span>(days <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"2"</span> <span class="sc" style="color: #5E5E5E;">&amp;</span> wearing <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"w"</span>)</span>
<span id="cb1-52"> )</span>
<span id="cb1-53"></span>
<span id="cb1-54"><span class="do" style="color: #5E5E5E;
font-style: italic;">## Datasets with VM obtained using the readActigraph() function from the </span></span>
<span id="cb1-55"><span class="do" style="color: #5E5E5E;
font-style: italic;">## PhysicalActivity R package</span></span>
<span id="cb1-56">choi_60s <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb1-57">  <span class="fu" style="color: #4758AB;">quiet</span>(</span>
<span id="cb1-58">    <span class="fu" style="color: #4758AB;">readActigraph</span>(<span class="st" style="color: #20794D;">"data_60sec.agd"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb1-59">    <span class="fu" style="color: #4758AB;">wearingMarking</span>(<span class="at" style="color: #657422;">cts =</span> <span class="st" style="color: #20794D;">"vm"</span>, <span class="at" style="color: #657422;">frame =</span> <span class="dv" style="color: #AD0000;">90</span>, <span class="at" style="color: #657422;">streamFrame =</span> <span class="dv" style="color: #AD0000;">30</span>, <span class="at" style="color: #657422;">allowanceFrame =</span> <span class="dv" style="color: #AD0000;">2</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb1-60">    <span class="fu" style="color: #4758AB;">filter</span>(days <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"2"</span> <span class="sc" style="color: #5E5E5E;">&amp;</span> wearing <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"w"</span>)</span>
<span id="cb1-61">   )</span>
<span id="cb1-62"></span>
<span id="cb1-63">choi_1s <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb1-64">  <span class="fu" style="color: #4758AB;">quiet</span>(</span>
<span id="cb1-65">    <span class="fu" style="color: #4758AB;">readActigraph</span>(<span class="st" style="color: #20794D;">"data_1sec.agd"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb1-66">    <span class="fu" style="color: #4758AB;">wearingMarking</span>(<span class="at" style="color: #657422;">cts =</span> <span class="st" style="color: #20794D;">"vm"</span>, <span class="at" style="color: #657422;">frame =</span> <span class="dv" style="color: #AD0000;">90</span>, <span class="at" style="color: #657422;">streamFrame =</span> <span class="dv" style="color: #AD0000;">30</span>, <span class="at" style="color: #657422;">allowanceFrame =</span> <span class="dv" style="color: #AD0000;">2</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb1-67">    <span class="fu" style="color: #4758AB;">filter</span>(days <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"2"</span> <span class="sc" style="color: #5E5E5E;">&amp;</span> wearing <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"w"</span>)</span>
<span id="cb1-68">   )</span>
<span id="cb1-69"></span>
<span id="cb1-70"><span class="do" style="color: #5E5E5E;
font-style: italic;">## Datasets with VM obtained after exporting data from Actilife to 'DataTable' </span></span>
<span id="cb1-71"><span class="do" style="color: #5E5E5E;
font-style: italic;">## format</span></span>
<span id="cb1-72">dataTable_60s <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb1-73"> <span class="fu" style="color: #4758AB;">quiet</span>(</span>
<span id="cb1-74">    <span class="fu" style="color: #4758AB;">read_datatable</span>(<span class="st" style="color: #20794D;">"data_DataTable_60sec.csv"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-75">    <span class="fu" style="color: #4758AB;">unite</span>(TimeStamp, Date, Time, <span class="at" style="color: #657422;">sep =</span> <span class="st" style="color: #20794D;">" "</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-76">    <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">TimeStamp =</span> lubridate<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">dmy_hms</span>(TimeStamp),</span>
<span id="cb1-77">           <span class="at" style="color: #657422;">TimeStamp =</span> <span class="fu" style="color: #4758AB;">as.character</span>(TimeStamp)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-78">    <span class="fu" style="color: #4758AB;">wearingMarking</span>(<span class="at" style="color: #657422;">cts =</span> <span class="st" style="color: #20794D;">"Vector.Magnitude"</span>, <span class="at" style="color: #657422;">frame =</span> <span class="dv" style="color: #AD0000;">90</span>, <span class="at" style="color: #657422;">streamFrame =</span> <span class="dv" style="color: #AD0000;">30</span>, <span class="at" style="color: #657422;">allowanceFrame =</span> <span class="dv" style="color: #AD0000;">2</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb1-79">    <span class="fu" style="color: #4758AB;">filter</span>(days <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"2"</span> <span class="sc" style="color: #5E5E5E;">&amp;</span> wearing <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"w"</span>)</span>
<span id="cb1-80">   )</span>
<span id="cb1-81"></span>
<span id="cb1-82">dataTable_1s <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb1-83"> <span class="fu" style="color: #4758AB;">quiet</span>(</span>
<span id="cb1-84">   <span class="fu" style="color: #4758AB;">read_datatable</span>(<span class="st" style="color: #20794D;">"data_DataTable_1sec.csv"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-85">   <span class="fu" style="color: #4758AB;">unite</span>(TimeStamp, Date, Time, <span class="at" style="color: #657422;">sep =</span> <span class="st" style="color: #20794D;">" "</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-86">   <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">TimeStamp =</span> lubridate<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">dmy_hms</span>(TimeStamp),</span>
<span id="cb1-87">          <span class="at" style="color: #657422;">TimeStamp =</span> <span class="fu" style="color: #4758AB;">as.character</span>(TimeStamp)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-88">   <span class="fu" style="color: #4758AB;">wearingMarking</span>(<span class="at" style="color: #657422;">cts =</span> <span class="st" style="color: #20794D;">"Vector.Magnitude"</span>, <span class="at" style="color: #657422;">frame =</span> <span class="dv" style="color: #AD0000;">90</span>, <span class="at" style="color: #657422;">streamFrame =</span> <span class="dv" style="color: #AD0000;">30</span>, <span class="at" style="color: #657422;">allowanceFrame =</span> <span class="dv" style="color: #AD0000;">2</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb1-89">   <span class="fu" style="color: #4758AB;">filter</span>(days <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"2"</span> <span class="sc" style="color: #5E5E5E;">&amp;</span> wearing <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"w"</span>)</span>
<span id="cb1-90">   )</span>
<span id="cb1-91"></span>
<span id="cb1-92"><span class="do" style="color: #5E5E5E;
font-style: italic;">## Datasets with VM obtained after exporting data from Actilife following wear </span></span>
<span id="cb1-93"><span class="do" style="color: #5E5E5E;
font-style: italic;">## time analysis</span></span>
<span id="cb1-94">WearTimeAnalysis_60s <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb1-95"> <span class="fu" style="color: #4758AB;">quiet</span>(</span>
<span id="cb1-96">   <span class="fu" style="color: #4758AB;">read_csv</span>(<span class="st" style="color: #20794D;">"data_WearTimeAnalysis_60sec.csv"</span>, <span class="at" style="color: #657422;">skip =</span> <span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-97">   <span class="fu" style="color: #4758AB;">unite</span>(TimeStamp, date, epoch, <span class="at" style="color: #657422;">sep =</span> <span class="st" style="color: #20794D;">" "</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-98">   <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">TimeStamp =</span> lubridate<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">dmy_hms</span>(TimeStamp),</span>
<span id="cb1-99">          <span class="at" style="color: #657422;">TimeStamp =</span> <span class="fu" style="color: #4758AB;">as.character</span>(TimeStamp)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-100">   <span class="fu" style="color: #4758AB;">as.data.frame</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-101">   <span class="fu" style="color: #4758AB;">wearingMarking</span>(<span class="at" style="color: #657422;">cts =</span> <span class="st" style="color: #20794D;">"vm"</span>, <span class="at" style="color: #657422;">frame =</span> <span class="dv" style="color: #AD0000;">90</span>, <span class="at" style="color: #657422;">streamFrame =</span> <span class="dv" style="color: #AD0000;">30</span>, <span class="at" style="color: #657422;">allowanceFrame =</span> <span class="dv" style="color: #AD0000;">2</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb1-102">   <span class="fu" style="color: #4758AB;">filter</span>(days <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"2"</span> <span class="sc" style="color: #5E5E5E;">&amp;</span> wearing <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"w"</span>)</span>
<span id="cb1-103">   )</span>
<span id="cb1-104"></span>
<span id="cb1-105">WearTimeAnalysis_1s <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb1-106"> <span class="fu" style="color: #4758AB;">quiet</span>(</span>
<span id="cb1-107">   <span class="fu" style="color: #4758AB;">read_csv</span>(<span class="st" style="color: #20794D;">"data_WearTimeAnalysis_1sec.csv"</span>, <span class="at" style="color: #657422;">skip =</span> <span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-108">   <span class="fu" style="color: #4758AB;">unite</span>(TimeStamp, date, epoch, <span class="at" style="color: #657422;">sep =</span> <span class="st" style="color: #20794D;">" "</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-109">   <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">TimeStamp =</span> lubridate<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">dmy_hms</span>(TimeStamp),</span>
<span id="cb1-110">          <span class="at" style="color: #657422;">TimeStamp =</span> <span class="fu" style="color: #4758AB;">as.character</span>(TimeStamp)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-111">   <span class="fu" style="color: #4758AB;">as.data.frame</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-112">   <span class="fu" style="color: #4758AB;">wearingMarking</span>(<span class="at" style="color: #657422;">cts =</span> <span class="st" style="color: #20794D;">"vm"</span>, <span class="at" style="color: #657422;">frame =</span> <span class="dv" style="color: #AD0000;">90</span>, <span class="at" style="color: #657422;">streamFrame =</span> <span class="dv" style="color: #AD0000;">30</span>, <span class="at" style="color: #657422;">allowanceFrame =</span> <span class="dv" style="color: #AD0000;">2</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb1-113">   <span class="fu" style="color: #4758AB;">filter</span>(days <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"2"</span> <span class="sc" style="color: #5E5E5E;">&amp;</span> wearing <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"w"</span>)</span>
<span id="cb1-114">   )</span></code></pre></div>
</details>
=======
<div class="cell">

>>>>>>> fe66cee94717b498b125e3a12739f85a6b83fe93
</div>
</section>
<section id="results-discussion" class="level1">
<h1>Results &amp; Discussion</h1>
<p>Figure&nbsp;1 shows the bivariate relationships between the VM values obtained from the different software procedures. The graphics placed in the diagonale of the figure from the top-left corner to the bottom-right corner show the distributions of the counts for the corresponding software procedures without using the y-scale of the figure. Each procedure seems perfectly correlated with each other.</p>
<div class="cell">

</div>
<<<<<<< HEAD
<div class="cell" data-hash="index_cache/html/fig-scatter_d88a2d47df5712c6c78cddb13a9ea2ad">
=======
<div class="cell">
>>>>>>> fe66cee94717b498b125e3a12739f85a6b83fe93
<div class="cell-output-display">
<div id="fig-scatter" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://pydemull.github.io/website-quarto//posts\actigraph-vm-counts\index_files\figure-html\fig-scatter-1.png" class="img-fluid figure-img" width="1152"></p>
<p></p><p></p>
</figure>
</div>
</div>
</div>
<p>Figure&nbsp;2 (top panel) shows that total VM counts are different between the tested software procedures. Indeed, total VM counts ranged from 415,312 counts (<code>acti_weartime</code> procedure) to 415,600 counts (<code>choi</code> procedure) for the 60-s epoch datasets, and from 461,795 counts (<code>acti_weartime</code> procedure) to 466,017 counts (<code>choi</code> procedure) for the 1-s epoch datasets. Figure&nbsp;2 (bottom panel) also shows that the differences between the procedures for total VM counts were higher when using 1-s epochs in comparison with the use of 60-s epochs. This last result may be put into relation with the fact that there were more observations when using 1-epochs compared to 60-s epochs, thus letting more room for total differences. Of note, the <code>basic</code> procedure and the <code>acti_datatable</code> procedure led to the same results, suggesting that Actilife software uses the VM formula and then a rounding procedure (2 digits) to provide VM values when exporting to DataTable-format spreadsheets.</p>
<div class="cell">

</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-baplots" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://pydemull.github.io/website-quarto//posts\actigraph-vm-counts\index_files\figure-html\fig-baplots-1.png" class="img-fluid figure-img" width="1152"></p>
<p></p><p></p>
</figure>
</div>
</div>
</div>
<p>Now, it remains to investigate what computations may be related to the <code>acti_weartime</code> procedure and why there were such differences between the various computation procedures. To do this, let’s take a look at a sample of VM values from the different datasets with 60-s epochs (Figure&nbsp;3).</p>
<div class="cell" data-layout-align="center">
<div id="fig-table" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<div id="htmlwidget-09ee3076ef8f6caee45e" class="reactable html-widget" style="width:auto;height:auto;"></div>
<script type="application/json" data-for="htmlwidget-09ee3076ef8f6caee45e">{"x":{"tag":{"name":"Reactable","attribs":{"data":{"acti_weartime":[1071,466,1401,1725,1140,444,2387,1546,613,417],"basic":[1070.5,465.72,1400.83,1724.55,1140.23,443.81,2387.33,1545.87,613.42,416.55],"acti_datatable":[1070.5,465.72,1400.83,1724.55,1140.23,443.81,2387.33,1545.87,613.42,416.55],"choi":[1071,466,1401,1725,1141,444,2388,1546,614,417]},"columns":[{"accessor":"acti_weartime","name":"acti_weartime","type":"numeric","width":180,"align":"center","style":[{"background":"#F0E442"},{"background":"#F0E442"},{"background":"#F0E442"},{"background":"#F0E442"},{"background":"#F0E442"},{"background":"#F0E442"},{"background":"#F0E442"},{"background":"#F0E442"},{"background":"#F0E442"},{"background":"#F0E442"}]},{"accessor":"basic","name":"basic","type":"numeric","width":180,"align":"center","style":[{"background":"#E69F00"},{"background":"#E69F00"},{"background":"#E69F00"},{"background":"#E69F00"},{"background":"#E69F00"},{"background":"#E69F00"},{"background":"#E69F00"},{"background":"#E69F00"},{"background":"#E69F00"},{"background":"#E69F00"}]},{"accessor":"acti_datatable","name":"acti_datatable","type":"numeric","width":180,"align":"center","style":[{"background":"#009E73"},{"background":"#009E73"},{"background":"#009E73"},{"background":"#009E73"},{"background":"#009E73"},{"background":"#009E73"},{"background":"#009E73"},{"background":"#009E73"},{"background":"#009E73"},{"background":"#009E73"}]},{"accessor":"choi","name":"choi","type":"numeric","width":180,"align":"center","style":[{"background":"#56B4E9"},{"background":"#56B4E9"},{"background":"#56B4E9"},{"background":"#56B4E9"},{"background":"#56B4E9"},{"background":"#56B4E9"},{"background":"#56B4E9"},{"background":"#56B4E9"},{"background":"#56B4E9"},{"background":"#56B4E9"}]}],"defaultPageSize":10,"paginationType":"numbers","showPageInfo":true,"minRows":1,"dataKey":"b4471b466f8bd44063411df7cec9efe3","key":"b4471b466f8bd44063411df7cec9efe3"},"children":[]},"class":"reactR_markup"},"evals":[],"jsHooks":[]}</script>
<p></p><p></p>
</figure>
</div>
</div>
<p>From Figure&nbsp;3, we can guess that Actilife software actually uses two different rounding methods when computing VM values with the <code>acti_weartime</code> procedure, these methods depending on the decimal part of the initial VM value. Assuming the values from the <code>basic</code> procedure can be used as reference to provide an idea of what should be initial VM values, we can describe these two methods as follows:</p>
<ul>
<li>Method 1: When the decimal part of the initial VM value is &gt;= 0.5, the value of the integer directly above the initial value of VM is returned;</li>
<li>Method 2: When the decimal part of the initial VM value is &lt; 0.5, the value of the integer directly below the initial value of VM is returned.</li>
</ul>
<p>Thus, we can understand why the <code>choi</code> procedure provides total VM counts that are clearly larger than those from the other procedures: while the <code>basic</code> and <code>acti_datatable</code>procedures will keep the decimal part of the initial VM values, the <code>choi</code> procedure will always return values larger than the initial values of VM if the decimal part is above 0, while the <code>acti_weartime</code> procedure will return either larger VM values or smaller VM values than the initial VM values depending on if the decimal part of the initial VM values is &gt;=0.5 or not, respectively.</p>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>In this post, we have seen that two procedures related to Actilife software to export VM data provide different values from each other and also differ from the <code>readActigraph()</code> function from the <code>PhysicalActivity</code> R package:</p>
<ul>
<li>The <code>acti_datatable</code> procedure (DataTable format from Actilife software) only rounds (2 digits) the VM values obtained using the basic VM formula.</li>
<li>The <code>acti_weartime</code> procedure (data obtained after wear time analysis from Actilife software) returns the integer directly above the initial VM value when the decimal part of the initial VM value is &gt;= 0.5, otherwise it returns the integer directly below the initial VM value.</li>
<li>The <code>choi</code> procedure always returns the integer directly above the initial VM value when the decimal part of the initial VM value is &gt;0.</li>
</ul>
<p>While the two tested Actilife procedures provide quite similar total VM counts values, the <code>readActigraph()</code> function seems to provide clearly larger total VM counts values at the end of the day. However, one could still consider such a difference as trivial. Indeed, the absolute difference of 4222 counts between the <code>choi</code> procedure and the <code>acti_weartime</code> procedure, when using 1-s epochs, represents only 0.9% of the total VM counts related to the <code>acti_weartime</code> procedure over the whole day. We could have the same perspective on the differences observed between total VM counts from the 60-s epoch datasets and 1-s epoch datasets. These differences are clear, but could be considered as trivial compared to the expected absolute value of total VM counts over a whole day. That’s being said, if there was no rationale to create such different procedures, it could be good thing to make all of these procedures similar from a computational point of view, for example by keeping the simple rounding procedure of the VM values to not distort the inital data.</p>
<section id="references" class="level3">




</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-line-spacing="2">
<div id="ref-bassettAccelerometerbasedPhysicalActivity2015" class="csl-entry">
Bassett, D. R., Troiano, R. P., Mcclain, J. J., &amp; Wolff, D. L. (2015). Accelerometer-based physical activity: Total volume per day and standardized measures. <em>Med Sci Sports Exerc</em>, <em>47</em>(4), 833–838. <a href="https://doi.org/10.1249/MSS.0000000000000468">https://doi.org/10.1249/MSS.0000000000000468</a>
</div>
<div id="ref-chenTechnologyAccelerometrybasedActivity2005" class="csl-entry">
Chen, K. Y., &amp; Bassett, D. R. (2005). The technology of accelerometry-based activity monitors: Current and future. <em>Med Sci Sports Exerc</em>, <em>37</em>(11), S490–S500. <a href="https://doi.org/10.1249/01.mss.0000185571.49104.82">https://doi.org/10.1249/01.mss.0000185571.49104.82</a>
</div>
<div id="ref-choiPhysicalActivityProcessAccelerometer2021" class="csl-entry">
Choi, L., Beck, C., Liu, Z., Moore, R., Matthews, C. E., &amp; Buchowski, M. S. (2021). <em><span>PhysicalActivity</span>: Process accelerometer data for physical activity measurement</em> (Version 0.2-4) [Computer software]. <a href="https://CRAN.R-project.org/package=PhysicalActivity">https://CRAN.R-project.org/package=PhysicalActivity</a>
</div>
<div id="ref-choiAssessmentWearNonwear2012b" class="csl-entry">
Choi, L., Ward, S. C., Schnelle, J. F., &amp; Buchowski, M. S. (2012). Assessment of wear/nonwear time classification algorithms for triaxial accelerometer. <em>Med Sci Sports Exerc</em>, <em>44</em>(10), 2009–2016. <a href="https://doi.org/10.1249/MSS.0b013e318258cb36">https://doi.org/10.1249/MSS.0b013e318258cb36</a>
</div>
<div id="ref-johnActiGraphActicalPhysical2012" class="csl-entry">
John, D., &amp; Freedson, P. (2012). <span>ActiGraph</span> and <span>Actical</span> physical activity monitors: A peek under the hood. <em>Med Sci Sports Exerc</em>, <em>44</em>, S86–S89. <a href="https://doi.org/10.1249/MSS.0b013e3182399f5e">https://doi.org/10.1249/MSS.0b013e3182399f5e</a>
</div>
</div></section></div> ]]></description>
  <category>actigraph</category>
  <category>actilife</category>
  <category>counts</category>
  <category>vector magnitude</category>
  <guid>https://pydemull.github.io/website-quarto//posts/actigraph-vm-counts/index.html</guid>
  <pubDate>Thu, 30 Jun 2022 22:00:00 GMT</pubDate>
  <media:content url="https://pydemull.github.io/website-quarto///docs/posts/actigraph-vm-counts/index_files/figure-html/fig-baplots-1.png" medium="image" type="image/png" height="144" width="144"/>
</item>
</channel>
</rss>
